<?php
/**
 * QuotePlan
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Piksel\Kigo
 * @author   Piksel
 * @link     https://piksel.nl
 */

/**
 * Kigo Pro - Channel Manager API
 *
 * https://www.kigoapis.com/pro/v1/swagger/?urls.primaryName=Channel%20Manager%20API%20v2
 *
 * The version of the OpenAPI document: channels-v2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Piksel\Kigo\ChannelsV2\Model;

use \ArrayAccess;
use \Piksel\Kigo\ObjectSerializer;

/**
 * QuotePlan Class Doc Comment
 *
 * @category Class
 * @package  Piksel\Kigo
 * @author   Piksel
 * @link     https://piksel.nl
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class QuotePlan implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'QuotePlan';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'guid' => 'string',
        'name' => 'string',
        'is_default' => 'bool',
        'availability' => '\Piksel\Kigo\ChannelsV2\Model\CheckAvailabilityOutput',
        'statement' => '\Piksel\Kigo\ChannelsV2\Model\PackedStatement',
        'deposits' => '\Piksel\Kigo\ChannelsV2\Model\DepositStatement',
        'deposit_schedule' => '\Piksel\Kigo\ChannelsV2\Model\ScheduledTransaction[]',
        'payment_schedule' => '\Piksel\Kigo\ChannelsV2\Model\PaymentSchedule',
        'cancellation_policy' => '\Piksel\Kigo\ChannelsV2\Model\CancellationPolicy',
        'rental_agreement_url' => 'string',
        'coupon' => '\Piksel\Kigo\ChannelsV2\Model\PromotionCoupon'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'guid' => 'uuid',
        'name' => null,
        'is_default' => null,
        'availability' => null,
        'statement' => null,
        'deposits' => null,
        'deposit_schedule' => null,
        'payment_schedule' => null,
        'cancellation_policy' => null,
        'rental_agreement_url' => null,
        'coupon' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'guid' => 'guid',
        'name' => 'name',
        'is_default' => 'isDefault',
        'availability' => 'availability',
        'statement' => 'statement',
        'deposits' => 'deposits',
        'deposit_schedule' => 'depositSchedule',
        'payment_schedule' => 'paymentSchedule',
        'cancellation_policy' => 'cancellationPolicy',
        'rental_agreement_url' => 'rentalAgreementUrl',
        'coupon' => 'coupon'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'guid' => 'setGuid',
        'name' => 'setName',
        'is_default' => 'setIsDefault',
        'availability' => 'setAvailability',
        'statement' => 'setStatement',
        'deposits' => 'setDeposits',
        'deposit_schedule' => 'setDepositSchedule',
        'payment_schedule' => 'setPaymentSchedule',
        'cancellation_policy' => 'setCancellationPolicy',
        'rental_agreement_url' => 'setRentalAgreementUrl',
        'coupon' => 'setCoupon'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'guid' => 'getGuid',
        'name' => 'getName',
        'is_default' => 'getIsDefault',
        'availability' => 'getAvailability',
        'statement' => 'getStatement',
        'deposits' => 'getDeposits',
        'deposit_schedule' => 'getDepositSchedule',
        'payment_schedule' => 'getPaymentSchedule',
        'cancellation_policy' => 'getCancellationPolicy',
        'rental_agreement_url' => 'getRentalAgreementUrl',
        'coupon' => 'getCoupon'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['guid'] = $data['guid'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['is_default'] = $data['is_default'] ?? null;
        $this->container['availability'] = $data['availability'] ?? null;
        $this->container['statement'] = $data['statement'] ?? null;
        $this->container['deposits'] = $data['deposits'] ?? null;
        $this->container['deposit_schedule'] = $data['deposit_schedule'] ?? null;
        $this->container['payment_schedule'] = $data['payment_schedule'] ?? null;
        $this->container['cancellation_policy'] = $data['cancellation_policy'] ?? null;
        $this->container['rental_agreement_url'] = $data['rental_agreement_url'] ?? null;
        $this->container['coupon'] = $data['coupon'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets guid
     *
     * @return string|null
     */
    public function getGuid()
    {
        return $this->container['guid'];
    }

    /**
     * Sets guid
     *
     * @param string|null $guid Guid
     *
     * @return self
     */
    public function setGuid($guid)
    {
        $this->container['guid'] = $guid;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool|null
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool|null $is_default True if it is the default plan setting, false otherwise
     *
     * @return self
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }

    /**
     * Gets availability
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\CheckAvailabilityOutput|null
     */
    public function getAvailability()
    {
        return $this->container['availability'];
    }

    /**
     * Sets availability
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\CheckAvailabilityOutput|null $availability availability
     *
     * @return self
     */
    public function setAvailability($availability)
    {
        $this->container['availability'] = $availability;

        return $this;
    }

    /**
     * Gets statement
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\PackedStatement|null
     */
    public function getStatement()
    {
        return $this->container['statement'];
    }

    /**
     * Sets statement
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\PackedStatement|null $statement statement
     *
     * @return self
     */
    public function setStatement($statement)
    {
        $this->container['statement'] = $statement;

        return $this;
    }

    /**
     * Gets deposits
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\DepositStatement|null
     */
    public function getDeposits()
    {
        return $this->container['deposits'];
    }

    /**
     * Sets deposits
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\DepositStatement|null $deposits deposits
     *
     * @return self
     */
    public function setDeposits($deposits)
    {
        $this->container['deposits'] = $deposits;

        return $this;
    }

    /**
     * Gets deposit_schedule
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\ScheduledTransaction[]|null
     */
    public function getDepositSchedule()
    {
        return $this->container['deposit_schedule'];
    }

    /**
     * Sets deposit_schedule
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\ScheduledTransaction[]|null $deposit_schedule A collection of refundable payments
     *
     * @return self
     */
    public function setDepositSchedule($deposit_schedule)
    {
        $this->container['deposit_schedule'] = $deposit_schedule;

        return $this;
    }

    /**
     * Gets payment_schedule
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\PaymentSchedule|null
     */
    public function getPaymentSchedule()
    {
        return $this->container['payment_schedule'];
    }

    /**
     * Sets payment_schedule
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\PaymentSchedule|null $payment_schedule payment_schedule
     *
     * @return self
     */
    public function setPaymentSchedule($payment_schedule)
    {
        $this->container['payment_schedule'] = $payment_schedule;

        return $this;
    }

    /**
     * Gets cancellation_policy
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\CancellationPolicy|null
     */
    public function getCancellationPolicy()
    {
        return $this->container['cancellation_policy'];
    }

    /**
     * Sets cancellation_policy
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\CancellationPolicy|null $cancellation_policy cancellation_policy
     *
     * @return self
     */
    public function setCancellationPolicy($cancellation_policy)
    {
        $this->container['cancellation_policy'] = $cancellation_policy;

        return $this;
    }

    /**
     * Gets rental_agreement_url
     *
     * @return string|null
     */
    public function getRentalAgreementUrl()
    {
        return $this->container['rental_agreement_url'];
    }

    /**
     * Sets rental_agreement_url
     *
     * @param string|null $rental_agreement_url Terms And Conditions Url (Taken from Contract Plan)
     *
     * @return self
     */
    public function setRentalAgreementUrl($rental_agreement_url)
    {
        $this->container['rental_agreement_url'] = $rental_agreement_url;

        return $this;
    }

    /**
     * Gets coupon
     *
     * @return \Piksel\Kigo\ChannelsV2\Model\PromotionCoupon|null
     */
    public function getCoupon()
    {
        return $this->container['coupon'];
    }

    /**
     * Sets coupon
     *
     * @param \Piksel\Kigo\ChannelsV2\Model\PromotionCoupon|null $coupon coupon
     *
     * @return self
     */
    public function setCoupon($coupon)
    {
        $this->container['coupon'] = $coupon;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


